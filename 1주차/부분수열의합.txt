파이썬의 순열조합 라이브러리
permutation 으로 조합을 만들어서 사용할 수 있지만
난이도가 너무 쉬워지므로 
dfs를 이용하여 구현.

dfs의 경우 맨 앞값부터 시작하여 값을 포함할지 안 할지로 분기를 나눠 dfs를 진행함
o(2^n)이긴 한데 2^20 (100만 정도 이므로 1초정도 안에 계산 가능하다)

그러면 모든 경우의 수를 고려하여 개수를 찾을 수 있다.


n,s = map(int, input().split())
data = list(map(int, input().split()))
data_len = len(data)
count = 0

def dfs(idx ,sum):
    global count
    if(idx >= n):
        return 
    sum += data[idx]
    if sum == s:
        count += 1
    dfs(idx+1, sum)                 # 현재 data 값을 더하는 경우
    dfs(idx+1, sum-data[idx])       # 현재 data 값을 더하지 않는 경우

dfs(0,0)
print(count)
